{"version":3,"sources":["Componetns/Counter.js","App.js","index.js"],"names":["Counter","value","addOne","add100","increase","type","onClick","App","state","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,G,MAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,SAA1B,OACrB,oCACE,qCAEGH,GAEH,4BAAQI,KAAK,SAASC,QAASJ,GAA/B,UAIA,4BAAQG,KAAK,SAASC,QAASH,GAA/B,UAIA,4BAAQE,KAAK,SAASC,QAASF,GAA/B,eC0BWG,E,4MAtCbC,MAAQ,CACNP,MAAO,G,EAGTC,OAAS,WACP,EAAKO,UAAS,SAAAD,GAAK,MAAK,CACtBP,MAAOO,EAAMP,MAAQ,O,EAIzBE,OAAS,WACP,EAAKM,UAAS,SAAAD,GAAK,MAAK,CACtBP,MAAOO,EAAMP,MAAQ,S,EAIzBG,SAAW,WACL,EAAKI,MAAMP,MAAQ,IAAM,GAC3B,EAAKE,SAGP,EAAKD,U,uDAGG,IACAA,EAA6BQ,KAA7BR,OAAQC,EAAqBO,KAArBP,OAAQC,EAAaM,KAAbN,SAExB,OACE,kBAAC,EAAD,CACEH,MAAOS,KAAKF,MAAMP,MAClBE,OAAQA,EACRD,OAAQA,EACRE,SAAUA,Q,GAjCAO,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.cc93612a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Counter = ({ value, addOne, add100, increase }) => (\n  <>\n    <h1>\n      Count:\n      {value}\n    </h1>\n    <button type=\"button\" onClick={addOne}>\n      addOne\n    </button>\n\n    <button type=\"button\" onClick={add100}>\n      Add100\n    </button>\n\n    <button type=\"button\" onClick={increase}>\n      increase\n    </button>\n  </>\n);\n\nCounter.propTypes = {\n  value: PropTypes.number.isRequired,\n  addOne: PropTypes.func.isRequired,\n  add100: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './Componetns/Counter';\n\nclass App extends React.Component {\n  state = {\n    value: 0,\n  }\n\n  addOne = () => {\n    this.setState(state => ({\n      value: state.value + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(state => ({\n      value: state.value + 100,\n    }));\n  };\n\n  increase = () => {\n    if (this.state.value % 5 === 0) {\n      this.add100();\n    }\n\n    this.addOne();\n  };\n\n  render() {\n    const { addOne, add100, increase } = this;\n\n    return (\n      <Counter\n        value={this.state.value}\n        add100={add100}\n        addOne={addOne}\n        increase={increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}